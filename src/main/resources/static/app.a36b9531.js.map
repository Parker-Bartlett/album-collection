{"version":3,"sources":["../JS/utils/events/event-actions.js","../JS/utils/api/api-actions.js","../JS/components/Songs.js","../JS/components/Comments.js","../JS/components/Song.js","../JS/components/Albums.js","../JS/components/Ratings.js","../JS/components/Album.js","../JS/components/Artists.js","../JS/components/Genres.js","../JS/components/Artist.js","../JS/app.js"],"names":["on","element","eventType","callback","addEventListener","event","getRequest","location","fetch","then","response","json","data","catch","err","console","log","postRequest","requestBody","method","body","JSON","stringify","Songs","songs","map","song","id","songTitle","join","Comments","comments","comment","commentContent","Song","duration","link","Albums","albums","album","albumTitle","Ratings","ratings","averageRating","count","i","length","albumRating","Album","image","recordLabel","Artists","artists","artist","artistName","Genres","genres","genre","genreName","Artist","main","getAppContext","innerHTML","navSongs","navAlbums","navArtists","addArtists","viewSingleArtist","addAlbumToArtist","viewSingleAlbum","addSongToAlbum","viewSingleSong","addCommentToSong","addGenreToArtist","artistButton","document","querySelector","albumButton","songButton","target","classList","contains","value"],"mappings":"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","file":"app.a36b9531.js","sourceRoot":"../src/main/resources/static/HTML","sourcesContent":["function on(element, eventType, callback) {\n    element.addEventListener(eventType, (event) => callback(event))\n}\n\nexport default {\n    on\n}","function getRequest(location, callback) {\n    fetch(location)\n        .then(response => response.json())\n        .then(data => callback(data))\n        .catch(err => console.log(err))\n}\n\nfunction postRequest(location, requestBody, callback) {\n    fetch(location, {\n       method: \"POST\",\n       body: JSON.stringify(requestBody)\n    })\n    .then(response => response.json())\n    .then(data => callback(data))\n    .catch(err => console.log(err))\n}\n\nexport default {\n    getRequest,\n    postRequest\n}","\nexport default function Songs(songs) {\n    return `\n        <ul class=\"songs\">\n            ${songs.map(song => {\n        return `\n                    <li class=\"song\">\n                        <h3 class=\"song__songTitle\" id=\"${song.id}\">${song.songTitle}</h3>                      \n                    </li>\n                `\n    }).join('')}\n        </ul>\n    `\n}","export default function Comments(comments) {\n    return comments\n        .map(comment => {\n            return `\n            <ul>\n                <li>${comment.commentContent}</li>\n            </ul>\n            `\n        }).join('')\n}","import Comments from './Comments'\n\nexport default function Song(song) {\n\n    return `\n        <h3 class=\"song__songTitle\">${song.songTitle}</h3>\n        <p class=\"song__duration\">${song.duration}</p>\n        <p class=\"song__link\">${song.link}</p>\n \n        <ul class=\"comments\">\n            <li class=\"comment\">${Comments(song.comments)}</li>\n        </ul>\n\n        <section class=\"add__comment\">\n            <input type=\"text\" class=\"add__commentContent\" placeholder=\"Comment here\">\n            <button class=\"add__comment__button\" id=\"${song.id}\">Add Comment</button>\n        </section>\n            `\n}","import songs from './Songs'\n\nexport default function Albums(albums) {\n    return `\n        <ul class=\"albums\">\n            ${albums.map(album => {\n                return `\n                    <h3 class=\"album__albumTitle\" id=\"${album.id}\">${album.albumTitle}</h3>\n                    `\n                }).join('')}\n        </ul>\n    `\n}\n","export default function Ratings(ratings) {\n    return `\n        <h3>${averageRating(ratings)}</h3>\n         `\n}\n\nfunction averageRating(ratings) {\n    console.log(ratings)\n    let count = 0\n    for (let i = 0; i < ratings.length; i++) {\n        count += ratings[i].albumRating\n    }\n    return (count / ratings.length)\n}","import Songs from './Songs'\nimport Ratings from './Ratings'\n\nexport default function Album(album) {\n    return `\n        <h3 class=\"album__albumTitle\">${album.albumTitle}</h3>\n        <p class=\"album__image\">${album.image}</p>\n        <p class=\"album__recordLabel\">${album.recordLabel}</p>\n        <p class=\"album__ratings\">${Ratings(album.ratings)}</p>\n \n        <ul class=\"songs\">\n            <li class=\"song\">${Songs(album.songs)}</li>\n        </ul>\n        \n            <section class=\"add__song\">\n                <input type=\"text\" class=\"add__songTitle\" placeholder=\"Song Title\">\n                <input type=\"text\" class=\"add__duration\" placeholder=\"Duration\">\n                <input type=\"text\" class=\"add__link\" placeholder=\"Link\">\n                <button class=\"add__song__button\" id=\"${album.id}\">Add Song</button>\n            </section>\n            `\n}","export default function Artists(artists) {\n    return `\n        <ul class=\"artists\">\n            ${artists.map(artist => {\n                return `\n                    <li class=\"artist\">\n                        <h3 class=\"artist__artistName\" id=\"${artist.id}\">${artist.artistName}</h3>                     \n                    </li>\n                    `\n            }).join('')}\n        </ul>\n        <section class=\"add__artist\">\n            <input type=\"text\" class=\"add__artistName\" placeholder=\"Artist Name\">\n            <input type=\"text\" class=\"add__image\" placeholder=\"Image URL\">\n            <button class=\"add__artist__button\">Add Artist</button>\n        </section>\n       `\n}","export default function Genres(genres){\n    return `\n    ${genres.map(genre =>{\n       return `\n                <h3 class=\"genre__genreName\"> ${genre.genreName} </h3>\n        `\n    }).join('')}\n\n    `\n}","import Albums from './Albums'\nimport Genres from './Genres'\n\nexport default function Artist(artist) {\n    return `\n        <h3 class=\"artist__artistName\">${artist.artistName}</h3>\n        <p class=\"artist__image\">${artist.image}</p>\n \n        <ul class=\"albums\">\n            <li class=\"album\">${Albums(artist.albums)}</li>\n        </ul>\n\n        <ul class=\"genres\">\n            <li class=\"genre\">${Genres(artist.genres)}</li>\n        </ul>\n\n        <section class=\"add__album\">\n            <input type=\"text\" class=\"add__albumTitle\" placeholder=\"Album Title\">\n            <input type=\"text\" class=\"add__image\" placeholder=\"Image URL\">\n            <button class=\"add__album__button\" id=\"${artist.id}\">Add Album</button>\n        </section>\n\n        <section class=\"add__genre\">\n            <input type=\"text\" class=\"add__genreName\" placeholder=\"Genre\">\n            <button class=\"add__genre__button\" id=\"${artist.id}\">Submit</button>\n        </section>\n\n            `\n}       ","import events from './utils/events/event-actions'\nimport api from './utils/api/api-actions'\n\nimport Songs from './components/Songs'\nimport Song from './components/Song'\nimport Albums from './components/Albums'\nimport Album from './components/Album'\nimport Artists from './components/Artists'\nimport Artist from './components/Artist'\n\nmain()\n\nfunction main() {\n\tapi.getRequest('/artists', artists => {\n\t\tgetAppContext().innerHTML = Artists(artists)\n\t})\n\tnavSongs()\n\tnavAlbums()\n\tnavArtists() \n\taddArtists()\n\tviewSingleArtist()\n\taddAlbumToArtist()\n\tviewSingleAlbum()\n\taddSongToAlbum()\n\tviewSingleSong()\n\taddCommentToSong()\n\taddGenreToArtist()\n}\n\n\n\n\n// All Nav functions will live here\nfunction navArtists() {\n\tconst artistButton = document.querySelector('.nav__artists');\n\tevents.on(artistButton, 'click', ()=> {\n\t\tapi.getRequest('/artists', artists => { \n\t\t\tgetAppContext().innerHTML = Artists(artists)\n\t\t})\n\t})\n}\n\nfunction navAlbums() {\n\tconst albumButton = document.querySelector('.nav__albums');\n\tevents.on(albumButton, 'click', ()=> {\n\t\tapi.getRequest('/albums', albums => {\n\t\t\tgetAppContext().innerHTML = Albums(albums)\n\t\t})\n\t})\n}\n\nfunction navSongs() {\n\tconst songButton = document.querySelector('.nav__songs');\n\tevents.on(songButton, 'click', ()=> {\n\t\tapi.getRequest('/songs', songs => {\n\t\t\tgetAppContext().innerHTML = Songs(songs)\n\t\t})\n\t})\n}\n\n\n\n\n//All artist functions will live here\nfunction addArtists() {\n\tevents.on(getAppContext(), 'click', ()=> {\n\t\tif(event.target.classList.contains('add__artist__button')) {\n\t\t\tconst artistName = document.querySelector('.add__artistName').value\n\t\t\tconst image = document.querySelector('.add__image').value\n\t\t\tapi.postRequest('/artists/add', {\n\t\t\t\tartistName : artistName,\n\t\t\t\timage : image\n\t\t\t}, (artists) => getAppContext().innerHTML = Artists(artists))\n\t\t}\n\t})\n}\n\nfunction viewSingleArtist() {\n\tevents.on(getAppContext(), 'click', () => {\n\t\tif(event.target.classList.contains('artist__artistName')) {\n\t\t\tapi.getRequest(`/artists/${event.target.id}`, artist => {\n\t\t\t\tgetAppContext().innerHTML = Artist(artist)\n\t\t\t})\n\t\t}\n\t})\n}\n//All Album functions will live here\n\nfunction addAlbumToArtist(){\n\tevents.on(getAppContext(), 'click', () =>{\n\t\tif(event.target.classList.contains('add__album__button')){\n\t\t\tconst albumTitle = document.querySelector('.add__albumTitle').value\n\t\t\tconst image = document.querySelector('.add__image').value\n\t\t\tapi.postRequest(`/albums/add/${event.target.id}`, {\n\t\t\t\talbumTitle : albumTitle,\n\t\t\t\timage : image\t\n\t\t\t}, (artist) => getAppContext().innerHTML = Artist(artist) )\n\t\t}\n\t})\n}\n\nfunction viewSingleAlbum(){\n\tevents.on(getAppContext(), 'click', () => {\n\t\tif(event.target.classList.contains('album__albumTitle')){\n\t\t\tapi.getRequest(`/albums/${event.target.id}`, album => {\n\t\t\t\tgetAppContext().innerHTML = Album(album)\n\t\t\t})\n\t\t}\n\t})\n}\n\n// All song functions will live here\n\nfunction addSongToAlbum(){\n\tevents.on(getAppContext(), 'click', () =>{\n\t\tif(event.target.classList.contains('add__song__button')){\n\t\t\tconst songTitle = document.querySelector('.add__songTitle').value\n\t\t\tconst duration = document.querySelector('.add__duration').value\n\t\t\tconst link = document.querySelector('.add__link').value\n\t\t\tapi.postRequest(`/songs/add/${event.target.id}`, {\n\t\t\t\tsongTitle : songTitle,\n\t\t\t\tduration : duration,\n\t\t\t\tlink : link\n\t\t\t}, (album) => getAppContext().innerHTML = Album(album))\n\t\t}\n\t})\n}\n\nfunction viewSingleSong() {\n\tevents.on(getAppContext(), 'click', () => {\n\t\tif(event.target.classList.contains('song__songTitle')) {\n\t\t\tapi.getRequest(`/songs/${event.target.id}`, song => {\n\t\t\t\tgetAppContext().innerHTML = Song(song)\n\t\t\t})\n\t\t}\n\t})\n}\n\n// Comment functions here\n\nfunction addCommentToSong() {\n\tevents.on(getAppContext(), 'click', () => {\n\t\tif(event.target.classList.contains('add__comment__button')) {\n\t\t\tconst commentContent = document.querySelector('.add__commentContent').value\n\t\t\tapi.postRequest(`/comments/add/${event.target.id}`, {\n\t\t\t\tcommentContent : commentContent\n\t\t\t}, (song) => getAppContext().innerHTML = Song(song))\n\t\t}\n\t})\n}\n\n//genre\n\nfunction addGenreToArtist() {\n\tevents.on(getAppContext(), 'click', () => {\n\t\tif(event.target.classList.contains('add__genre__button')) {\n\t\t\tconst genreName = document.querySelector('.add__genreName').value\n\t\t\tapi.postRequest(`/genres/add/${event.target.id}`, {\n\t\t\t\tgenreName: genreName\n\t\t\t}, (artist) => getAppContext().innerHTML = Artist(artist))\n\t\t}\n\t})\n}\n\n\n\n\n\n\n\n\n\nfunction getAppContext() {\n\treturn document.querySelector('#app')\n}\n\n\n\n\n\n\n"]}