{"version":3,"sources":["../JS/utils/events/event-actions.js","../JS/utils/api/api-actions.js","../JS/components/Comments.js","../JS/components/Songs.js","../JS/app.js"],"names":["on","element","eventType","callback","addEventListener","event","getRequest","location","fetch","then","response","json","data","catch","err","console","log","postRequest","requestBody","method","body","JSON","stringify","respone","Comments","comments","map","comment","commentContent","join","Songs","songs","song","songTitle","duration","link","main","getAppContext","innerHTML","document","querySelector"],"mappings":";AAIe,aAJf,SAASA,EAAGC,EAASC,EAAWC,GAC5BF,EAAQG,iBAAiBF,EAAW,SAACG,GAAUF,OAAAA,EAASE,KAG7C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXL,GAAAA,GADW,QAAA,QAAA;;ACaA,aAjBf,SAASM,EAAWC,EAAUJ,GAC1BK,MAAMD,GACDE,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GAAQT,OAAAA,EAASS,KACtBC,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,KAGlC,SAASG,EAAYV,EAAUW,EAAaf,GACxCK,MAAMD,EAAU,CACbY,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,KAEvBT,KAAK,SAAAc,GAAWb,OAAAA,SAASC,SACzBF,KAAK,SAAAG,GAAQT,OAAAA,EAASS,KACtBC,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,KAGf,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXR,WAAAA,EACAW,YAAAA,GAFW,QAAA,QAAA;;ACRd,aATc,SAASO,EAASC,GACtBA,OAAAA,EACFC,IAAI,SAAAC,GAGSA,MAAAA,2CAAAA,OAAAA,EAAQC,eAFlB,4CAKDC,KAAK,IACf,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACSA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAlBD,IAAA,EAAA,EAAA,QAAA,eAkBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhBc,SAASC,EAAMC,GAGhBA,MAAAA,6CAAAA,OAAAA,EAAML,IAAI,SAAAM,GAG8BA,MAAAA,gGAAAA,OAAAA,EAAKC,UACLD,+DAAAA,OAAAA,EAAKE,SACZF,uDAAAA,OAAAA,EAAKG,KAEF,0GAAA,QAAA,EAASH,EAAAA,SAAAA,EAAKP,UANhD,uFAUDI,KAAK,IAbhB;;AC4GH,aAhBD,IAAA,EAAA,EAAA,QAAA,iCACA,EAAA,EAAA,QAAA,4BAEA,EAAA,EAAA,QAAA,uBAaC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GATD,SAASO,IACJ9B,EAAAA,QAAAA,WAAW,SAAU,SAAAyB,GACxBM,IAAgBC,WAAY,EAAMP,EAAAA,SAAAA,KAKpC,SAASM,IACDE,OAAAA,SAASC,cAAc,QAV/BJ","file":"app.25fa3829.js","sourceRoot":"../src/main/resources/static/HTML","sourcesContent":["function on(element, eventType, callback) {\n    element.addEventListener(eventType, (event) => callback(event))\n}\n\nexport default {\n    on\n}","function getRequest(location, callback) {\n    fetch(location)\n        .then(response => response.json())\n        .then(data => callback(data))\n        .catch(err => console.log(err))\n}\n\nfunction postRequest(location, requestBody, callback) {\n    fetch(location, {\n       method: \"POST\",\n       body: JSON.stringify(requestBody)\n    })\n    .then(respone => response.json())\n    .then(data => callback(data))\n    .catch(err => console.log(err))\n}\n\nexport default {\n    getRequest,\n    postRequest\n}","export default function Comments(comments) {\n    return comments\n        .map(comment => {\n            return `\n            <ul>\n                <li>${comment.commentContent}</li>\n            </ul>\n            `\n        }).join('')\n}","import comments from './Comments'\n\nexport default function Songs(songs) {\n    return `\n        <ul class=\"songs\">\n            ${songs.map(song => {\n                return `\n                    <li class=\"song\">\n                        <h3 class=\"song__songTitle\">${song.songTitle}</h3>\n                        <p class=\"song__songLength\">${song.duration}</p>\n                        <p class=\"song__link\"${song.link}></p>\n                        <ul class=\"comments\">\n                            <li class=\"comment\">${comments(song.comments)}</li>\n                        </ul>\n                    </li>\n                `\n            }).join('')}\n    `\n}","// fetch(\"/songs\")\n// \t.then(response => response.json())\n// \t.then(songs => {\n// \t\tlet songSong = `<ul>`;\n// \t\tsongs.forEach(song => {\n// \t\t\tsongSong += `\t\t\t\t\n// \t\t\t\t<li>\n// \t\t\t\t\t   <h3>${song.songTitle}</h3>\n// \t\t\t\t\t   <ul>\n\t\t\t\t\t\t  \n// \t\t\t\t\t\t   ${song.comments.map(comment => {\n// \t\t\t\t  return `\n// \t\t\t\t\t\t\t\t  <li>\n// \t\t\t\t\t\t\t\t\t  <p>${comment.commentContent}</p>\n\n// \t\t\t\t\t\t\t\t  </li>\n// \t\t\t\t\t\t\t  `;\n// \t\t\t\t})\n// \t\t\t\t.join(\"\")}\n// \t\t\t\t\t   </ul>\n// \t\t\t\t   </li>\n// \t\t\t   `;\n// \t\t});\n// \t\tsongSong += `</ul>`;\n// \t\tapp.innerHTML = songSong;\n// \t})\n// \t.catch(err => console.log(err));\n\n// buttonEventListener();\n// function buttonEventListener(){\n// \tconst albumsButton = document.querySelector('.albums-button')\n// \tconst artistsButton = document.querySelector('.artists-button')\n// \tconst songsButton = document.querySelector('.songs-button')\n\n// \talbumsButton.addEventListener('click', retrieveAlbums);\n\n// \tartistsButton.addEventListener('click', ()=> {\n// \t\tretrieveArtists(artistsButton)\n\t\t\n// \t})\n\n// \tsongsButton.addEventListener('click', ()=> {\n// \t\tretrieveSongs(songsButton)\n\t\t\n// \t})\n\n// \tfunction retrieveAlbums(){\n// \t\tfetch(\"/albums\")\n// \t\t.then(response => response.json())\n// \t\t.then(albums => {\n// \t\tlet albumAlbum = `<ul>`;\n// \t\talbums.forEach(album => {\n// \t\t\talbumAlbum += `\t\t\t\t\n// \t\t\t\t<li>\n// \t\t\t\t\t<h3>${album.albumTitle}</h3>\n// \t\t\t\t</li>\n// \t\t\t`;\n// \t\t})\n// \t\talbumAlbum += `</ul>`;\n// \t\tapp.innerHTML = albumAlbum;\n// \t})\n// \t.catch(err => console.log(err));\n// \t}\n\n\t\n\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport events from './utils/events/event-actions'\nimport api from './utils/api/api-actions'\n\nimport Songs from './components/Songs'\n\nmain()\n\nfunction main() {\n\tapi.getRequest('/songs', songs => {\n\t\tgetAppContext().innerHTML = Songs(songs)\n\t})\n}\n\n\nfunction getAppContext() {\n\treturn document.querySelector('#app')\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}